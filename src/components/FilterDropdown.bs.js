// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Core from "@material-ui/core";
import * as Styles from "@material-ui/styles";

function px_of_int(x) {
  return String(x) + "px";
}

var useStyles = Styles.makeStyles(function (theme) {
      var x = Curry._1(theme.spacing, 1);
      var x$1 = Curry._1(theme.spacing, 1);
      return {
              filter: {
                border: "1px #BDBDBD solid",
                borderRight: "0px",
                display: "flex",
                minWidth: "220px",
                paddingRight: String(x) + "px",
                paddingLeft: String(x$1) + "px",
                borderTopLeftRadius: "4px",
                borderBottomLeftRadius: "0.9rem",
                alignItems: "center",
                justifyContent: "flex-end"
              }
            };
    });

function FilterDropdown(Props) {
  var paramFn = Props.paramFn;
  var items = Props.items;
  var classes = useStyles();
  var match = React.useState(function () {
        return "Filters";
      });
  var setValue = match[1];
  var value = match[0];
  var handleChange = function ($$event, param) {
    var val = $$event.target.value;
    Curry._1(setValue, (function (param) {
            return val;
          }));
    return Curry._1(paramFn, {
                group: val
              });
  };
  return React.createElement("span", {
              className: classes.filter
            }, React.createElement(Core.FormControl, {
                  children: React.createElement(Core.Select, {
                        children: null,
                        input: React.createElement(Core.Input, {
                              disableUnderline: true,
                              id: "catalog-filter",
                              name: "catalog-filter"
                            }),
                        native: true,
                        onChange: handleChange,
                        value: value
                      }, React.createElement("option", {
                            disabled: true,
                            value: "Filters"
                          }, value), Belt_Array.mapWithIndex(items, (function (idx, x) {
                              return React.createElement("option", {
                                          key: String(idx),
                                          value: x
                                        }, x);
                            })))
                }));
}

var make = FilterDropdown;

export {
  px_of_int ,
  useStyles ,
  make ,
  
}
/* useStyles Not a pure module */
